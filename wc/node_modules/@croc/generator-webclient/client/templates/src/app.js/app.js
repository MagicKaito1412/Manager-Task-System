define([
    "jquery",
    "core",
    "app/domain/model-ext",
    "lib/interop/DataFacadeSmart",
    "lib/interop/BackendInterop",
    "lib/data/DataStoreFactory",
    //"app/CacheManager",
    "lib/ui/menu/AppNavMenu",
    "lib/ui/AppToolbar",
    "xhtmpl!app/ui/templates/app.hbs",
    "i18n!app/nls/resources",
    "app/iconProvider",
    "app/default-menus",
    "app/default-parts",
    "app/parts",
    "app/area-default"
],
function ($, core, model, DataFacadeSmart, BackendInterop, DataStoreFactory, /*, CacheManager*/
		AppNavMenu, AppToolbar, templateApp, resources) {
	"use strict";

	return core.lang.Class(core.Application, {
		constructor: function () {
			core.Application.call(this, xconfig, { template: templateApp });
			this.model = model;
		},

		createDataFacade: function () {
			return DataStoreFactory
				.create(xconfig.appName, /*db version:*/ 1, model.meta)
				.then(function (store) {
					return new DataFacadeSmart(
						new BackendInterop(xconfig),
						null, // eventPublisher, Application will initialize it while running
						store,
						{
							// TODO: cacheManager: new CacheManager()
						}
					);
				});
		},

		preinitialize: function () {
			var that = this;
			that.appToolbar = new AppToolbar(that, {
				//affix: false
			});
		},

		initialize: function () {
			var that = this;

			// top navigation menu (switching areas):
			// NOTE: AppNavToolbar cannot be created in preinitialize and rendered in template as it depends on AreaManager which is initialized after template rendered
			that.navMenu = new AppNavMenu(that.areaManager);
			that.appToolbar.appNavMenu(that.navMenu);
		}
		
	});
});
