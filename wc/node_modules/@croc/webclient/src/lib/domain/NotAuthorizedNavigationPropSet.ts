import lang = require("lib/core.lang");
import support = require("./support");

class NotAuthorizedNavigationPropSet extends lang.Observable {
	@lang.decorators.constant(true)
	isLoaded: boolean;

	@lang.decorators.constant(true)
	isNotAuthorized: boolean;

	@lang.decorators.constant(true)
	isGhost: boolean;

	static singleton: NotAuthorizedNavigationPropSet;

	/**
	 * @constructs NotAuthorizedNavigationPropSet
	 * @extends Observable
	 */
	constructor() {
		super();
	}

	load(): lang.Promise<any> {
		return lang.resolved();
	}

	loadItems(): lang.Promise<any> {
		return lang.resolved(this);
	}

	ids(): string[] {
		return [];
	}

	count(): number {
		return 0;
	}

	all(): any[] {
		return [];
	}

	get(): void {}

	first(): void {}

	indexOf(): number {
		return -1;
	}

	contains(): boolean {
		return false;
	}

	add(): void {
		throw support.errors.createNotAuthorized();
	}

	remove(): void {
		throw support.errors.createNotAuthorized();
	}

	move(): void {
		throw support.errors.createNotAuthorized();
	}

	toString(): string {
		return support.values.NotAuthorizedPropValue.toString();
	}
}

NotAuthorizedNavigationPropSet.singleton = new NotAuthorizedNavigationPropSet();

export = NotAuthorizedNavigationPropSet;
