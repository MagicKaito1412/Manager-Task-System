import $ = require("jquery");
import core = require("core");
import binding = require("lib/binding");
import Part = require("lib/ui/Part");
import Menu = require("lib/ui/menu/Menu");
import MenuPresenterBase = require("lib/ui/menu/MenuPresenterBase");
import DropDownMenuPresenter = require("lib/ui/menu/DropDownMenuPresenter");
import "xcss!lib/ui/styles/menu.css";

class MenuPresenter extends MenuPresenterBase {
	static defaultOptions: MenuPresenter.Options = {
		classes: {
			root: "x-menu",
			item: "x-menu-item",
			itemDefault: "x-menu-item-default",
			submenuContainer: "x-menu-item-dropdown"
		}
	};

	/**
	 * Menu presenter for action menus (based on buttons)
	 * @constructs MenuPresenter
	 * @extends MenuPresenterBase
	 * @param options See MenuPresenterBase.prototype.defaultOptions
	 * @param {Object} options.viewModel
	 */
	constructor(options?: MenuPresenterBase.Options) {
		options = MenuPresenterBase.mixOptions(options, MenuPresenter.defaultOptions);
		super(options);
	}

	protected _createRootEl(domElement: JQuery|HTMLElement): JQuery {
		return $("<div class='" + this.options.classes.root + "'>").appendTo(domElement);
	}

	protected _createSubmenuContainer(item: Menu.Item): JQuery {
		return $("<div class='" + this.options.classes.submenuContainer + "'></div>");
	}

	protected _createItemEl(item: Menu.Item): JQuery {
		let btn = $("<button type='button' class='" + this.options.classes.item + "' />");
		this._addItemCommonAttrs(item, btn);
		btn.button();
		return btn;
	}
}
namespace MenuPresenter {
	export interface Options extends MenuPresenterBase.Options {}
}

core.ui.MenuPresenter = MenuPresenter;

export = MenuPresenter;
