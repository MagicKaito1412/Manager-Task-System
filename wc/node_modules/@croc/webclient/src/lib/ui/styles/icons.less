@import ".variables.less";

/* Import styles generated by Icomoon App (http://icomoon.io/app/) */
@font-face {
  font-family: '@{icon-font-name}';
  src: url('@{icon-font-path}@{icon-font-name}.eot');
  src: url('@{icon-font-path}@{icon-font-name}.eot?#iefix') format('embedded-opentype'),
       url('@{icon-font-path}@{icon-font-name}.woff') format('woff'),
       url('@{icon-font-path}@{icon-font-name}.ttf') format('truetype'),
       url('@{icon-font-path}@{icon-font-name}.svg#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
}

.iconfont() {
  font-family: '@{icon-font-name}';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 16px;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Use the following CSS code if you want to have a class per icon */
.x-icon {
  .iconfont;

  &:after {
    /*display: inline-block; *//* Fix for clickability issue in WebKit */
    content: ' '
  }
}

.x-icon-alone {
  &:after {
    content: none;
  }
}

/* XFW classes */
// NOTE: please don't define '.x-icon-{foo}:before' selectors, you can't use them as mixins later.
// Use inner '&:before' selectors  instead.

@x-icon-close: "\e60c";
.x-icon-close{
	&:before {
		content: @x-icon-close; /* close (light cross) */
	}
}
@x-icon-key: "\e98d";
.x-icon-key {
	&:before {
		content: @x-icon-key;  /* key (password) */
	}
}
@x-icon-cancel-circle: "\ea0d";
.x-icon-cancel-circle {
	&:before {
		content: @x-icon-cancel-circle;
	}
}

@x-icon-home: "\e000";
.x-icon-home {
  &:before {
    content: @x-icon-home; /*home*/
  }
}

@x-icon-plus: "\e001";
.x-icon-plus {
  &:before {
    content: @x-icon-plus; /*plus*/
  }
}

@x-icon-add: "\e001";
.x-icon-add {
  &:before {
    content: @x-icon-add; /*plus*/
  }
}

@x-icon-select: "\e001";
.x-icon-select {
  &:before {
    content: @x-icon-select; /*plus*/
  }
}

@x-icon-unlink: "\e002";
.x-icon-unlink {
  &:before {
    content: @x-icon-unlink; /*minus*/
  }
}

@x-icon-minus: "\e002";
.x-icon-minus {
  &:before {
    content: @x-icon-minus; /*minus*/
  }
}

@x-icon-clear: "\e003";
.x-icon-clear {
  &:before {
    content: @x-icon-clear; /*cancel*/
  }
}

@x-icon-cancel: "\e003";
.x-icon-cancel {
  &:before {
    content: @x-icon-cancel; /*cancel*/
  }
}

@x-icon-ok: "\e004";
.x-icon-ok {
  &:before {
    content: @x-icon-ok; /*checkmark*/
  }
}

@x-icon-stop: "\e005";
.x-icon-stop {
  &:before {
    content: @x-icon-stop; /*blocked*/
  }
}

@x-icon-save: "\e006";
.x-icon-save {
  &:before {
    content: @x-icon-save; /*upload*/
  }
}

@x-icon-upload: "\e006";
.x-icon-upload {
  &:before {
    content: @x-icon-upload; /*upload*/
  }
}

@x-icon-download: "\e007";
.x-icon-download {
  &:before {
    content: @x-icon-download; /*download-2*/
  }
}

@x-icon-arrow-left: "\e008";
.x-icon-arrow-left {
  &:before {
    content: @x-icon-arrow-left; /*arrow-left*/
  }
}

@x-icon-arrow-right: "\e009";
.x-icon-arrow-right {
  &:before {
    content: @x-icon-arrow-right; /*arrow-right*/
  }
}

@x-icon-camera: "\e00a";
.x-icon-camera {
  &:before {
    content: @x-icon-camera; /*camera*/
  }
}

@x-icon-arrow-up: "\e00b";
.x-icon-arrow-up {
  &:before {
    content: @x-icon-arrow-up; /*arrow-up*/
  }
}

@x-icon-arrow-down: "\e00c";
.x-icon-arrow-down {
  &:before {
    content: @x-icon-arrow-down; /*arrow-down*/
  }
}

@x-icon-undo: "\e00d";
.x-icon-undo {
  &:before {
    content: @x-icon-undo; /*undo*/
  }
}

@x-icon-redo: "\e00e";
.x-icon-redo {
  &:before {
    content: @x-icon-redo; /*redo*/
  }
}

@x-icon-detach-draft: "\e00f";
.x-icon-detach-draft {
  &:before {
    content: @x-icon-detach-draft; /*download*/
  }
}

@x-icon-download-2: "\e00f";
.x-icon-download-2 {
  &:before {
    content: @x-icon-download-2; /*download*/
  }
}

@x-icon-create: "\e010";
.x-icon-create {
  &:before {
    content: @x-icon-create; /*file*/
  }
}

@x-icon-edit: "\e011";
.x-icon-edit {
  &:before {
    content: @x-icon-edit; /*pencil*/
  }
}

@x-icon-drafts: "\e011";
.x-icon-drafts {
  &:before {
    content: @x-icon-drafts; /*pencil*/
  }
}

@x-icon-remove: "\e012";
.x-icon-remove {
  &:before {
    content: @x-icon-remove; /*remove*/
  }
}

@x-icon-search: "\e013";
.x-icon-search {
  &:before {
    content: @x-icon-search; /*search*/
  }
}

@x-icon-refresh: "\e014";
.x-icon-refresh {
  &:before {
    content: @x-icon-refresh; /*loop*/
  }
}

@x-icon-print: "\e015";
.x-icon-print {
  &:before {
    content: @x-icon-print; /*printer*/
  }
}

@x-icon-list: "\e016";
.x-icon-list {
  &:before {
    content: @x-icon-list; /*file-clipboard*/
  }
}

@x-icon-upload-2: "\e017";
.x-icon-upload-2 {
  &:before {
    content: @x-icon-upload-2; /*upload-2*/
  }
}

@x-icon-export: "\e018";
.x-icon-export {
  &:before {
    content: @x-icon-export; /*share*/
  }
}

@x-icon-login: "\e019";
.x-icon-login {
  &:before {
    content: @x-icon-login; /*enter*/
  }
}

@x-icon-logout: "\e01a";
.x-icon-logout {
  &:before {
    content: @x-icon-logout; /*exit*/
  }
}

@x-icon-settings: "\e01b";
.x-icon-settings {
  &:before {
    content: @x-icon-settings; /*cog*/
  }
}

@x-icon-info: "\e01c";
.x-icon-info {
  &:before {
    content: @x-icon-info; /*info*/
  }
}

@x-icon-help: "\e01d";
.x-icon-help {
  &:before {
    content: @x-icon-help; /*help*/
  }
}

@x-icon-warning-triangle: "\e01e";
.x-icon-warning-triangle {
  &:before {
    content: @x-icon-warning-triangle; /*warning-triangle*/
  }
}

@x-icon-comment: "\e01f";
.x-icon-comment {
  &:before {
    content: @x-icon-comment; /*comment*/
  }
}

@x-icon-comments: "\e020";
.x-icon-comments {
  &:before {
    content: @x-icon-comments; /*comments*/
  }
}

@x-icon-notifications: "\e021";
.x-icon-notifications {
  &:before {
    content: @x-icon-notifications; /*bell*/
  }
}

@x-icon-user: "\e022";
.x-icon-user {
  &:before {
    content: @x-icon-user; /*user*/
  }
}

@x-icon-report: "\e023";
.x-icon-report {
  &:before {
    content: @x-icon-report; /*file-powerpoint*/
  }
}

@x-icon-sync: "\e024";
.x-icon-sync {
  &:before {
    content: @x-icon-sync; /*spinner*/
  }
}

@x-icon-loading: "\e024";
.x-icon-loading {
  &:before {
    content: @x-icon-loading; /*spinner*/
  }
}

@x-icon-waiting: "\e024";
.x-icon-waiting {
  &:before {
    content: @x-icon-waiting; /*spinner*/
  }
}

@x-icon-warning: "\e025";
.x-icon-warning {
  &:before {
    content: @x-icon-warning; /*warning-circle*/
  }
}

@x-icon-plug: "\e026";
.x-icon-plug {
  &:before {
    content: @x-icon-plug; /*plug*/
  }
}

@x-icon-circle: "\e027";
.x-icon-circle {
  &:before {
    content: @x-icon-circle; /*circle*/
  }
}

@x-icon-menu3: "\e9bd";
.x-icon-menu3 {
	&:before {
		content: @x-icon-menu3; /* menu (3 bars), hamburger */
	}
}
@x-icon-menu3-outer: "\e9be";
.x-icon-menu3-outer {
	&:before {
		content: @x-icon-menu3-outer; /* menu (3 bars) + two arrows outwards, hamburger */
	}
}
@x-icon-menu3-down: "\e9bf";
.x-icon-menu3-down {
	&:before {
		content: @x-icon-menu3-down; /* menu (3 bars) + arrow down, hamburger */
	}
}
@x-icon-menu3-up: "\e9c0";
.x-icon-menu3-up {
	&:before {
		content: @x-icon-menu3-up; /* menu (3 bars) + arrow up, hamburger */
	}
}

@x-icon-menu4-outer: "\e028";
.x-icon-menu4-outer {
	&:before {
		content: @x-icon-menu4-outer; /* menu (4 bars) + two arrows outwards */
	}
}
@x-icon-menu4-inner: "\e900";
.x-icon-menu4-inner {
	&:before {
		content: @x-icon-menu4-inner; /* menu (4 bars) + two arrows inwards */
	}
}
// for backward compatibility:
@x-icon-context-menu: "\e028";
.x-icon-context-menu {
	&:before {
		content: @x-icon-context-menu; /*menu, options*/
	}
}

@x-icon-file: "\e029";
.x-icon-file {
	&:before {
		content: @x-icon-file; /* file2*/
	}
}

@x-icon-view: "\e029";
.x-icon-view {
  &:before {
    content: @x-icon-view; /* file2*/
  }
}

@x-icon-clock: "\e02a";
.x-icon-clock {
  &:before {
    content: @x-icon-clock; /* clock */
  }
}
@x-icon-calendar: "\e02b";
.x-icon-calendar {
  &:before {
    content: @x-icon-calendar; /* calendar */
  }
}

@x-icon-checkbox-checked: "\e02c";
.x-icon-checkbox-checked {
	&:before {
		content: @x-icon-checkbox-checked; /* "checkbox-checked" */
	}
}

@x-icon-checkbox-unchecked: "\e02d";
.x-icon-checkbox-unchecked {
	&:before {
		content: @x-icon-checkbox-unchecked; /* "checkbox-unchecked" */
	}
}

@x-icon-checkbox-partial: "\e02f";
.x-icon-checkbox-partial {
	&:before {
		content: @x-icon-checkbox-partial; /* "checkbox-partial" */
	}
}

@x-icon-radio-checked: "\e030";
.x-icon-radio-checked {
	&:before {
		content: @x-icon-radio-checked; /* "radio-checked" */
	}
}

@x-icon-radio-unchecked: "\e031";
.x-icon-radio-unchecked {
	&:before {
		content: @x-icon-radio-unchecked; /* "radio-unchecked" */
	}
}

@x-icon-target: "\e032";
.x-icon-target {
	&:before {
		content: @x-icon-target; /* "target" */
	}
}

@x-icon-today: "\e032";
.x-icon-today {
	&:before {
		content: @x-icon-today; /* "target" */
	}
}

@x-icon-folder: "\e033";
.x-icon-folder {
	&:before {
		content: @x-icon-folder; /* "folder-open" */
	}
}

@x-icon-select-all: "\e02c";
.x-icon-select-all {
  &:before {
    content: @x-icon-select-all; /* "checked" */
  }
}

@x-icon-select-none: "\e02d";
.x-icon-select-none {
  &:before {
    content: @x-icon-select-none; /* "unchecked" */
  }
}

@x-icon-filter: "\e02e";
.x-icon-filter {
  &:before {
    content: @x-icon-filter; /* "filter" */
  }
}

@x-icon-copy: "\e600";
.x-icon-copy {
  &:before {
    content: @x-icon-copy; /*copy*/
  }
}

@x-icon-angle-bracket-bottom: "\e601";
.x-icon-angle-bracket-bottom {
  &:before {
    content: @x-icon-angle-bracket-bottom; /* "V" */
  }
}

@x-icon-angle-bracket-right: "\e602";
.x-icon-angle-bracket-right {
  &:before {
    content: @x-icon-angle-bracket-right; /* ">" */
  }
}

@x-icon-angle-bracket-top: "\e603";
.x-icon-angle-bracket-top {
  &:before {
    content: @x-icon-angle-bracket-top; /* "^" */
  }
}

@x-icon-angle-bracket-left: "\e604";
.x-icon-angle-bracket-left {
  &:before {
    content: @x-icon-angle-bracket-left; /* "<" */
  }
}

@x-icon-pushpin: "\e605";
.x-icon-pushpin {
  &:before {
    content: @x-icon-pushpin; /* "pin" */
  }
}

@x-icon-app-nav: "\e606";
.x-icon-app-nav {
  &:before {
    content: @x-icon-app-nav; /* "app-nav grid" */
  }
}

@x-icon-repeat: "\e607";
.x-icon-repeat {
  &:before {
    content: @x-icon-repeat; /* "repeat" */
  }
}

@x-icon-lightning: "\e608";
.x-icon-lightning {
  &:before {
    content: @x-icon-lightning; /* "lightning" */
  }
}

@x-icon-warning-triangle2: "\e609";
.x-icon-warning-triangle2 {
  &:before {
    content: @x-icon-warning-triangle2; /* "warning-triangle2" */
  }
}

@x-icon-box-add: "\e60a";
.x-icon-box-add {
  &:before {
    content: @x-icon-box-add; /* "bpx-add" */
  }
}

@x-icon-info2: "\e60b";
.x-icon-info2 {
  &:before {
    content: @x-icon-info2; /* "info2" */
  }
}

@x-icon-picture: "\e620";
.x-icon-picture {
  &:before {
    content: @x-icon-picture; /* "picture" */
  }
}

.x-icon-anim-rotating {
  -webkit-animation: Rotate 1s infinite linear;
  -moz-animation: Rotate 1s infinite linear;
  -ms-animation: Rotate 1s infinite linear;
  -o-animation: Rotate 1s infinite linear;
  animation: Rotate 1s infinite linear;
  display: inline-block;
}

@-o-keyframes Rotate {
  from {
    -o-transform: rotate(0deg);
  }
  to {
    -o-transform: rotate(360deg);
  }
}

@-moz-keyframes Rotate {
  from {
    -moz-transform: rotate(0deg);
  }
  to {
    -moz-transform: rotate(360deg);
  }
}

@-ms-keyframes Rotate {
  from {
    -ms-transform: rotate(0deg);
  }
  to {
    -ms-transform: rotate(360deg);
  }
}

@-webkit-keyframes Rotate {
  from {
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes Rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* size classes (used by core.ui.getWaitingIconClass) */
.x-icon-16 {
  font-size: 16px;
}

.x-icon-32 {
  font-size: 32px;
}

.x-icon-48 {
  font-size: 48px;
}

/* Experiment: color-icons */
/*
// Looks ugly in new design. Also descendant selectors are bad practice.
:enabled .x-icon-ok {
  color: darkgreen;
}

:enabled .x-icon-cancel {
  color: @color-danger;
}
*/

// checkbox via icons
.iconic-checkbox() {
	.iconfont;
	font-size: @font-size-base;
	cursor: pointer;
	text-align: center;
	background: @color-content;
	color: lighten(@color-text, 5%);
	&:hover, &:focus {
		color: darken(@color-text, 10%);
	}
}
