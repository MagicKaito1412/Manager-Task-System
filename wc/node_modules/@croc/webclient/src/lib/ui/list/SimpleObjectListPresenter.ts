import * as core from "core";
import * as ObjectListPresenterBase from "lib/ui/list/ObjectListPresenterBase";

import View = core.ui.View;
import Options = SimpleObjectListPresenter.Options;

class SimpleObjectListPresenter extends ObjectListPresenterBase {
	static defaultOptions: Options = {
		DataPresenter: View,
		dataTemplate: undefined,
		cssClass: ""
	};

	options: Options;

	/**
	 * @class SimpleObjectListPresenter
	 * @extends ObjectListPresenterBase
	 * @param {Object} options
	 */
	constructor(options?: Options) {
		options = SimpleObjectListPresenter.mixOptions(options, SimpleObjectListPresenter.defaultOptions);
		super(options);
	}

	protected _dataPresenterOptions(): View.Options {
		var that = this,
			dataOptions: View.Options = super._dataPresenterOptions();
		// dataTemplate --> template
		dataOptions.template = that.options.dataTemplate;
		delete dataOptions["dataTemplate"];
		return dataOptions;
	}
}
// Backward compatibility
SimpleObjectListPresenter.mixin({
	defaultOptions: SimpleObjectListPresenter.defaultOptions
});

namespace SimpleObjectListPresenter {
	export interface Options extends ObjectListPresenterBase.Options {
		dataTemplate?: HandlebarsTemplateDelegate;
	}
}

core.ui.SimpleObjectListPresenter = SimpleObjectListPresenter;
export = SimpleObjectListPresenter;
