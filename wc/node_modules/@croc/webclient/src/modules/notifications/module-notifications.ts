import core = require("core");
import NotificationManager = require("./NotificationManager");
import resources = require("i18n!lib/nls/resources");
import resourcesModule = require("i18n!./nls/resources");

import lang = core.lang;

// extend common resources
lang.forEach(resourcesModule, function (value, key) {
	resources[key] = value;
});
// augment Application class
declare module "lib/core" {
	export interface Application {
		notificationManager?: NotificationManager;
	}
}

core.createModule("notifications", function (app) {
	return {
		initialize: function () {
			let notificationMgr = new NotificationManager();
			app.notificationManager = notificationMgr;

			if (app.sysMenu) {
				let menuItem = app.sysMenu.getRootItem("notifications");
				if (!menuItem) {
					menuItem = app.sysMenu.addRootItem({
						name: "notifications",
						getPart: () => {
							return notificationMgr.getEventLogView();
						}
					});
				}
				app.notificationManager.bind("change:activeEvents", (sender, count) => {
					if (count > 0) {
						menuItem.badge(count);
					} else {
						menuItem.badge("");
					}
				});
			}

			app.eventPublisher.subscribeAll(function (ev) {
				if (app.notificationManager) {
					if (ev.eventName === "app.unload") {
						app.notificationManager.dispose();
						ev.processed = true;
					} else {
						ev.processed = app.notificationManager.processEvent(ev.eventName, ev.args);
					}
				} else {
					ev.processed = false;
				}
			});

		}
	};
});

