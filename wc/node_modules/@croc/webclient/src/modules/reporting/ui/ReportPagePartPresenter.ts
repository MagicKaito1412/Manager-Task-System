import $ = require("jquery");
import core = require("core");
import ReportPresenterBase = require("./ReportPresenterBase");
import ReportPagePart = require("./ReportPagePart");
import defaultTemplate = require("xhtmpl!modules/reporting/ui/templates/ReportPagePartPresenter.hbs");
import "lib/ui/menu/MenuPresenter";

import lang = core.lang;
import { PartCloseOptions } from "lib/ui/.ui";

class ReportPagePartPresenter extends ReportPresenterBase {
	static defaultOptions: ReportPagePartPresenter.Options = {
		template: defaultTemplate
	};
	private $navbar: JQuery;

	/**
	 * @constructs ReportPagePartPresenter
	 * @extends ReportPresenterBase
	 */
	constructor(options: ReportPagePartPresenter.Options) {
		options = ReportPagePartPresenter.mixOptions(options, ReportPagePartPresenter.defaultOptions);
		super(options);
	}

	protected onReady(): void {
		let eventPublisher = core.Application.current.eventPublisher;

		if (this.$navbar) {
			eventPublisher.publish("ui.affix.remove_element", {
				element: this.$navbar
			});
		}
		this.$navbar = $(".x-app-navbar");
		eventPublisher.publish("ui.affix.add_element", {
			element: this.$navbar,
			suspendByScreenWidth: 600,
			stuckBehaviors: [] // reset default behaviors
		});

		super.onReady();
	}

	unload(options?: PartCloseOptions): void {
		let that = this;
		super.unload();

		if (that.$navbar) {
			core.Application.current.eventPublisher.publish("ui.affix.remove_element", {
				element: that.$navbar
			});
		}
	}
}
namespace ReportPagePartPresenter {
	export interface Options extends ReportPresenterBase.Options {
	}
}
ReportPagePartPresenter.mixin({
	defaultOptions: ReportPagePartPresenter.defaultOptions
});

///core.reporting.ReportPagePartPresenter = ReportPagePartPresenter;
ReportPagePart.defaultOptions.Presenter = ReportPagePartPresenter;
export = ReportPagePartPresenter;
